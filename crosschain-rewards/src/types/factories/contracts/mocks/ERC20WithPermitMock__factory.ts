/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20WithPermitMock,
  ERC20WithPermitMockInterface,
} from "../../../contracts/mocks/ERC20WithPermitMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "getPermitDigest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252600f81526e115490cc8c15da5d1a14195c9b5a5d608a1b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f8e8dfca995c0dc34242d28254fc73b766b49c42aaa21d5cfed4a98afa719e9db818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355610a80806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063cd3b3ccd11610066578063cd3b3ccd14610272578063d4d92b1414610343578063d505accf14610358578063dd62ed3e1461036b57600080fd5b806370a08231146101e35780637ecebe001461020357806395d89b4114610223578063a9059cbb1461025f57600080fd5b806323b872dd116100d357806323b872dd1461018657806330adf81f14610199578063313ce567146101c05780633644e515146101da57600080fd5b806306fdde03146100fa578063095ea7b31461014c57806318160ddd1461016f575b600080fd5b6101366040518060400160405280600f81526020017f4552433230576974685065726d6974000000000000000000000000000000000081525081565b6040516101439190610809565b60405180910390f35b61015f61015a366004610873565b610396565b6040519015158152602001610143565b61017860005481565b604051908152602001610143565b61015f61019436600461089d565b6103ad565b6101787f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6101c8601281565b60405160ff9091168152602001610143565b61017860035481565b6101786101f13660046108d9565b60016020526000908152604090205481565b6101786102113660046108d9565b60046020526000908152604090205481565b6101366040518060400160405280600781526020017f455243323057500000000000000000000000000000000000000000000000000081525081565b61015f61026d366004610873565b610414565b6101786102803660046108f4565b6003546001600160a01b039485166000818152600460209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452969097166060830152608082019490945260a081019490945260c0808501929092528251808503909201825260e08401835281519185019190912061190160f01b61010085015261010284019190915261012280840191909152815180840390910181526101429092019052805191012090565b610356610351366004610873565b610421565b005b610356610366366004610936565b61042f565b6101786103793660046109a9565b600260209081526000928352604080842090915290825290205481565b60006103a3338484610653565b5060015b92915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546103db90836106b5565b6001600160a01b038516600090815260026020908152604080832033845290915290205561040a8484846106c8565b5060019392505050565b60006103a33384846106c8565b61042b828261076e565b5050565b428410156104845760405162461bcd60e51b815260206004820152600760248201527f455850495245440000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876104d783610a0b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161055092919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156105bb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906105f15750886001600160a01b0316816001600160a01b0316145b61063d5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161047b565b610648898989610653565b505050505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106c18284610a24565b9392505050565b6001600160a01b0383166000908152600160205260409020546106eb90826106b5565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461071a90826107fd565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106a89085815260200190565b60005461077b90826107fd565b60009081556001600160a01b0383168152600160205260409020546107a090826107fd565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f19085815260200190565b60405180910390a35050565b60006106c18284610a37565b600060208083528351808285015260005b818110156108365785810183015185820160400152820161081a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461086e57600080fd5b919050565b6000806040838503121561088657600080fd5b61088f83610857565b946020939093013593505050565b6000806000606084860312156108b257600080fd5b6108bb84610857565b92506108c960208501610857565b9150604084013590509250925092565b6000602082840312156108eb57600080fd5b6106c182610857565b6000806000806080858703121561090a57600080fd5b61091385610857565b935061092160208601610857565b93969395505050506040820135916060013590565b600080600080600080600060e0888a03121561095157600080fd5b61095a88610857565b965061096860208901610857565b95506040880135945060608801359350608088013560ff8116811461098c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156109bc57600080fd5b6109c583610857565b91506109d360208401610857565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060018201610a1d57610a1d6109dc565b5060010190565b818103818111156103a7576103a76109dc565b808201808211156103a7576103a76109dc56fea26469706673582212201e653ce71dff08717abe509456574325d7b1b27980476c5e3d8c8873e4f3a83a64736f6c63430008130033";

type ERC20WithPermitMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WithPermitMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20WithPermitMock__factory extends ContractFactory {
  constructor(...args: ERC20WithPermitMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20WithPermitMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC20WithPermitMock__factory {
    return super.connect(runner) as ERC20WithPermitMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WithPermitMockInterface {
    return new Interface(_abi) as ERC20WithPermitMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20WithPermitMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC20WithPermitMock;
  }
}
